{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","utils/validators/validators.ts","components/common/FormsControls.tsx","components/common/FormsControl.module.css","hoc/withAuthRedirect.tsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPost/MyPosts.module.css","components/Profile/MyPost/Posts/Post.module.css","components/Profile/MyPost/Posts/Post.tsx","components/Profile/MyPost/MyPosts.tsx","components/Profile/MyPost/MyPostsContainer.tsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileDataFormEdit.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","requiredFiled","maxLength","FormsControl","meta","touched","error","children","showError","className","styles","form_control","Textarea","props","input","RestProps","Input","module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","restProps","to","Post","my_post__post_item","message","maxLength10","MyPosts","React","memo","postsArray","PostsData","map","elem","id","my_posts","my_post__make","MyPostsRedux","onSubmit","values","internalAddPost","newPostText","my_post__posts","reduxForm","form","ref","useRef","onKeyPress","e","key","current","click","handleSubmit","my_posts__input","Field","validate","component","name","placeholder","MyPostsContainer","ProfileData","actions","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","profile_status","autoFocus","onBlur","updateStatus","onChange","currentTarget","profile_status_text","onDoubleClick","ProfileDataEdit","user_status","user_status_text","user_looking_for_a_job","type","ProfileInfoData","profile","isOwner","toEditMode","user_info","edit_mode_btn","onClick","lookingForAJob","aboutMe","ProfileInfo","info_about_user","avatar_name_user","user_avatar","src","photos","large","small","alt","info_about_user__avatar","target","files","savePhoto","info_about_user__text","fullName","formData","saveProfile","ProfileComponent","top_image","main_content","image","description","ProfileContainer","userId","this","match","params","loginedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","Profile","compose","withRouter"],"mappings":"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","file":"static/js/4.5be22287.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export type FieldValidator = (value: string) => string | undefined;\r\n\r\nexport const requiredFiled: FieldValidator = (value) => {\r\n    if (value) {\r\n        return undefined;\r\n    }\r\n\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLength =\r\n    (maxLength: number): FieldValidator =>\r\n    (value) => {\r\n        if (value && value.length > maxLength) {\r\n            return `Max len is ${maxLength} symb`;\r\n        }\r\n        return undefined;\r\n    };\r\n","import styles from \"./FormsControl.module.css\";\r\nimport React from \"react\";\r\nimport { WrappedFieldMetaProps, WrappedFieldProps } from \"redux-form\";\r\n\r\ntype FormsControlsPropsType = {\r\n    meta: WrappedFieldMetaProps;\r\n};\r\nconst FormsControl: React.FC<FormsControlsPropsType> = ({\r\n    meta: { touched, error },\r\n    children,\r\n    ...props\r\n}) => {\r\n    const showError = touched && error;\r\n    return (\r\n        <div\r\n            className={styles.form_control + \" \" + (showError && styles.error)}\r\n        >\r\n            <div>{children}</div>\r\n            <div>{showError && <span>{error}</span>}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    const { input, meta, ...RestProps } = props;\r\n    return (\r\n        <FormsControl {...props}>\r\n            <textarea {...input} {...RestProps}></textarea>\r\n        </FormsControl>\r\n    );\r\n};\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const { input, meta, ...RestProps } = props;\r\n    return (\r\n        <FormsControl {...props}>\r\n            <input {...input} {...RestProps}></input>\r\n        </FormsControl>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_control\":\"FormsControl_form_control__36Uzx\",\"error\":\"FormsControl_error__3o0CI\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { AppStateType } from \"../redux/redux-store\";\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\ntype MapPropsType = {\r\n    isAuth: boolean;\r\n};\r\n\r\nexport function withAuthRedirect<WCP>(Component: React.ComponentType<WCP>) {\r\n    const RedirectComponent: React.FC<MapPropsType & {}> = (props) => {\r\n        let { isAuth, ...restProps } = props;\r\n        if (!isAuth) {\r\n            return <Redirect to=\"/login\" />;\r\n        } else {\r\n            // @ts-ignore\r\n            return <Component {...(restProps as WCP)} />;\r\n        }\r\n    };\r\n    let connectedRedirectComponent = connect<\r\n        MapPropsType,\r\n        {},\r\n        WCP,\r\n        AppStateType\r\n    >(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return connectedRedirectComponent;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info_about_user__avatar\":\"ProfileInfo_info_about_user__avatar__vF1yr\",\"edit_mode_btn\":\"ProfileInfo_edit_mode_btn__2CutD\",\"info_about_user\":\"ProfileInfo_info_about_user__2Rckk\",\"info_about_user__text\":\"ProfileInfo_info_about_user__text__3qRKf\",\"user_avatar\":\"ProfileInfo_user_avatar__2eu-_\",\"user_status\":\"ProfileInfo_user_status__29qYU\",\"user_status_text\":\"ProfileInfo_user_status_text__t3eBF\",\"avatar_name_user\":\"ProfileInfo_avatar_name_user__ABojO\",\"profile_status\":\"ProfileInfo_profile_status__15ASI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"top_image\":\"Profile_top_image__y6nuZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_posts\":\"MyPosts_my_posts__z7Pfw\",\"my_posts__input\":\"MyPosts_my_posts__input__18h1Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_post__post_item\":\"Post_my_post__post_item__nEMaK\"};","import React from \"react\";\r\nimport styles from \"./Post.module.css\";\r\n\r\ntype OwnPropsType = { message: string };\r\n\r\nconst Post: React.FC<OwnPropsType> = (props) => {\r\n    return <div className={styles.my_post__post_item}>{props.message}</div>;\r\n};\r\n\r\nexport default Post;\r\n","import React, { useRef } from \"react\";\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport styles from \"./MyPosts.module.css\";\r\nimport Post from \"./Posts/Post\";\r\nimport { maxLength, requiredFiled } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls\";\r\nimport { PostType } from \"../../../redux/profile-reducer\";\r\n\r\nconst maxLength10 = maxLength(10);\r\n\r\ntype FormProps = {\r\n    newPostText: string;\r\n};\r\n\r\nexport type MapPropsType = {\r\n    PostsData: Array<PostType>;\r\n};\r\n\r\nexport type DispatchPropsType = {\r\n    internalAddPost: (value: string) => void;\r\n};\r\n\r\nconst MyPosts: React.FC<MapPropsType & DispatchPropsType> = React.memo(\r\n    (props) => {\r\n        let AddNewPost = (values: FormProps) => {\r\n            props.internalAddPost(values.newPostText);\r\n        };\r\n        let PostsData = props.PostsData;\r\n        let postsArray = PostsData.map((elem) => (\r\n            <Post message={elem.message} key={elem.id} />\r\n        ));\r\n        return (\r\n            <div className={styles.my_posts}>\r\n                <span>My posts</span>\r\n                <div className={styles.my_post__make}>\r\n                    <MyPostsRedux onSubmit={AddNewPost} />\r\n                </div>\r\n                <div className={styles.my_post__posts}>{postsArray}</div>\r\n            </div>\r\n        );\r\n    }\r\n);\r\n\r\nlet MyPostsNewPost: React.FC<InjectedFormProps<FormProps, {}> & {}> = (\r\n    props\r\n) => {\r\n    let ref = useRef<HTMLFormElement>(null);\r\n    return (\r\n        <form  onKeyPress={(e) => {\r\n            if(e.key === \"Enter\") {\r\n                ref.current?.click()\r\n            }\r\n        }} onSubmit={props.handleSubmit} className={styles.my_posts__input}>\r\n            <Field\r\n                validate={[requiredFiled, maxLength10]}\r\n                component={Textarea}\r\n                name=\"newPostText\"\r\n                placeholder=\"Add new post text\"\r\n            />\r\n            <button>Add post</button>\r\n        </form>\r\n    );\r\n};\r\nlet MyPostsRedux = reduxForm<FormProps, {}>({ form: \"MyPostsForm\" })(\r\n    MyPostsNewPost\r\n);\r\n\r\nexport default MyPosts;\r\n","import MyPosts, { DispatchPropsType, MapPropsType } from \"./MyPosts\";\r\nimport { actions } from \"../../../redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { AppStateType } from \"../../../redux/redux-store\";\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        PostsData: state.ProfileData.PostsData,\r\n    };\r\n};\r\n\r\nlet MyPostsContainer = connect<\r\n    MapPropsType,\r\n    DispatchPropsType,\r\n    {},\r\n    AppStateType\r\n>(mapStateToProps, { internalAddPost: actions.addPostActionCreator })(MyPosts);\r\n\r\nexport { MyPostsContainer };\r\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\n\r\ntype PropsType = {\r\n    status: string;\r\n    updateStatus: (value: string) => void;\r\n};\r\n\r\nconst ProfileStatusWithHooks: React.FC<PropsType> = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.profile_status}>\r\n            {!editMode ? (\r\n                <div className={styles.profile_status_text}>\r\n                    <span onDoubleClick={activateEditMode}>{props.status}</span>\r\n                </div>\r\n            ) : (\r\n                <input\r\n                    autoFocus\r\n                    onBlur={deactivateEditMode}\r\n                    onChange={onStatusChange}\r\n                    value={status}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import { Input } from \"../../common/FormsControls\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { requiredFiled } from \"../../../utils/validators/validators\";\r\nimport { ProfileType } from \"../../../types/types\";\r\nimport React from \"react\";\r\n\r\ntype OwnPropsType = {\r\n    status: string;\r\n    updateStatus: (newStatus: string) => void;\r\n};\r\n\r\nconst ProfileInfoDataForm: React.FC<\r\n    InjectedFormProps<ProfileType, OwnPropsType> & OwnPropsType\r\n> = ({ status, updateStatus, handleSubmit }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <button>Save</button>\r\n            </div>\r\n            <div className={styles.user_status}>\r\n                <span className={styles.user_status_text}>\r\n                    <b>Status:</b>\r\n                </span>\r\n                <ProfileStatusWithHooks\r\n                    status={status}\r\n                    updateStatus={updateStatus}\r\n                />\r\n            </div>\r\n            <div className={styles.user_looking_for_a_job}>\r\n                <b>Looking for a job:</b>{\" \"}\r\n                <Field\r\n                    component={Input}\r\n                    name=\"lookingForAJob\"\r\n                    placeholder=\"Looking for a job\"\r\n                    type=\"checkbox\"\r\n                />\r\n            </div>\r\n            <div className={styles.user_looking_for_a_job}>\r\n                <b>Looking for a job description:</b>{\" \"}\r\n                <Field\r\n                    validate={[requiredFiled]}\r\n                    component={Input}\r\n                    name=\"lookingForAJobDescription\"\r\n                    placeholder=\"Looking for a job description\"\r\n                />\r\n            </div>\r\n            <div className={styles.user_looking_for_a_job}>\r\n                <b>Full name:</b>{\" \"}\r\n                <Field\r\n                    component={Input}\r\n                    validate={[requiredFiled]}\r\n                    name=\"fullName\"\r\n                    placeholder=\"Full name\"\r\n                />\r\n            </div>\r\n            <div className={styles.user_looking_for_a_job}>\r\n                <b>About me:</b>{\" \"}\r\n                <Field\r\n                    component={Input}\r\n                    validate={[requiredFiled]}\r\n                    name=\"aboutMe\"\r\n                    placeholder=\"About me\"\r\n                />\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\nlet ProfileDataEdit = reduxForm<ProfileType, OwnPropsType>({\r\n    form: \"EditProfile\",\r\n})(ProfileInfoDataForm);\r\nexport default ProfileDataEdit;\r\n","import { ChangeEvent, useState } from \"react\";\r\nimport { ProfileType } from \"../../../types/types\";\r\nimport { Preloader } from \"../../common/preloader\";\r\nimport ProfileDataEdit from \"./ProfileDataFormEdit\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHoods from \"./ProfileStatusWithHooks\";\r\n\r\ntype OwnPropsType = {\r\n    isOwner: boolean;\r\n    status: string;\r\n    updateStatus: (status: string) => void;\r\n    savePhoto: (image: File) => void;\r\n    profile: ProfileType | null;\r\n    saveProfile: (formData: ProfileType) => void;\r\n    image: string;\r\n    description: string;\r\n};\r\n\r\nconst ProfileInfo: React.FC<OwnPropsType> = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />;\r\n    }\r\n    const mainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files?.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    };\r\n    const onSubmit = (formData: ProfileType) => {\r\n        props.saveProfile(formData);\r\n        setEditMode(false);\r\n    };\r\n    return (\r\n        <div className={styles.info_about_user}>\r\n            <div className={styles.avatar_name_user}>\r\n                <div className={styles.user_avatar}>\r\n                    <img\r\n                        src={\r\n                            props.profile.photos?.large ||\r\n                            props.profile.photos?.small ||\r\n                            \"http://assets.stickpng.com/thumbs/585e4beacb11b227491c3399.png\"\r\n                        }\r\n                        alt=\"\"\r\n                        className={styles.info_about_user__avatar}\r\n                    />\r\n                    {props.isOwner ? (\r\n                        <input type=\"file\" onChange={mainPhotoSelected} />\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                </div>\r\n                <div className={styles.info_about_user__text}>\r\n                    {props.profile.fullName}\r\n                </div>\r\n            </div>\r\n            {editMode ? (\r\n                <ProfileDataEdit\r\n                    status={props.status}\r\n                    updateStatus={props.updateStatus}\r\n                    onSubmit={onSubmit}\r\n                />\r\n            ) : (\r\n                <ProfileInfoData\r\n                    {...props}\r\n                    toEditMode={() => {\r\n                        setEditMode(true);\r\n                    }}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\ntype ProfileInfoDataPropsType = {\r\n    isOwner: boolean;\r\n    status: string;\r\n    updateStatus: (status: string) => void;\r\n    profile: ProfileType | null;\r\n    toEditMode: () => void;\r\n};\r\n\r\nconst ProfileInfoData: React.FC<ProfileInfoDataPropsType> = ({\r\n    status,\r\n    updateStatus,\r\n    profile,\r\n    isOwner,\r\n    toEditMode,\r\n}) => {\r\n    return (\r\n        <div className={styles.user_info}>\r\n            {isOwner ? (\r\n                <div className={styles.edit_mode_btn}>\r\n                    <button onClick={toEditMode}>Edit mode</button>\r\n                </div>\r\n            ) : (\r\n                <></>\r\n            )}\r\n            <div className={styles.user_status}>\r\n                <span className={styles.user_status_text}>\r\n                    <b>Status:</b>\r\n                </span>\r\n                <ProfileStatusWithHoods\r\n                    status={status}\r\n                    updateStatus={updateStatus}\r\n                />\r\n            </div>\r\n            <div className={styles.user_looking_for_a_job}>\r\n                <b>Looking for a job:</b>{\" \"}\r\n                {profile?.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            <div className={styles.user_looking_for_a_job}>\r\n                <b>About me:</b> {profile?.aboutMe}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import styles from \"./Profile.module.css\";\r\nimport { MyPostsContainer } from \"./MyPost/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport React from \"react\";\r\nimport { ProfileType } from \"../../types/types\";\r\n\r\ntype OwnPropsType = {\r\n    isOwner: boolean;\r\n    status: string;\r\n    updateStatus: (status: string) => void;\r\n    savePhoto: (image: File) => void;\r\n    profile: ProfileType | null;\r\n    saveProfile: (formData: ProfileType) => void;\r\n};\r\n\r\nconst ProfileComponent: React.FC<OwnPropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={styles.top_image}>\r\n                <img\r\n                    src=\"https://s3.tproger.ru/uploads/2016/10/reactmini.png\"\r\n                    alt=\"\"\r\n                ></img>\r\n            </div>\r\n            <div className={styles.main_content}>\r\n                <ProfileInfo\r\n                    isOwner={props.isOwner}\r\n                    status={props.status}\r\n                    updateStatus={props.updateStatus}\r\n                    savePhoto={props.savePhoto}\r\n                    profile={props.profile}\r\n                    image=\"https://cdn-icons-png.flaticon.com/512/25/25231.png\"\r\n                    description=\"user descr\"\r\n                    saveProfile={props.saveProfile}\r\n                />\r\n                <MyPostsContainer />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileComponent;\r\n","import { ProfileType } from \"./../../types/types\";\r\nimport { AppStateType } from \"./../../redux/redux-store\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ProfileComponent from \"./Profile\";\r\nimport { getUserProfile, savePhoto } from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n    updateStatus,\r\n    getStatus,\r\n    saveProfile,\r\n} from \"../../redux/profile-reducer\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\ntype DispatchPropsType = {\r\n    getUserProfile: (userId: number | null) => void;\r\n    savePhoto: (image: File) => void;\r\n    getStatus: (userId: number | null) => void;\r\n    updateStatus: (status: string) => void;\r\n    saveProfile: (formData: ProfileType) => void;\r\n};\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>;\r\n\r\ntype PathParamsType = {\r\n    userId: string;\r\n};\r\n\r\ntype PropsType = MapPropsType &\r\n    DispatchPropsType &\r\n    RouteComponentProps<PathParamsType>;\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    refreshProfile() {\r\n        let userId: number | null = +this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.loginedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps: PropsType, prevState: AppStateType) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <ProfileComponent\r\n                {...this.props}\r\n                savePhoto={this.props.savePhoto}\r\n                isOwner={!this.props.match.params.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                saveProfile={this.props.saveProfile}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n    profile: state.ProfileData.profile,\r\n    status: state.ProfileData.status,\r\n    loginedUserId: state.auth.userId,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        savePhoto,\r\n        getUserProfile,\r\n        getStatus,\r\n        updateStatus,\r\n        saveProfile,\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer) as React.ComponentType<any>;\r\n"],"sourceRoot":""}