{"version":3,"sources":["utils/validators/validators.ts","components/common/FormsControls.tsx","components/common/FormsControl.module.css","hoc/withAuthRedirect.tsx","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["requiredFiled","value","maxLength","length","FormsControl","meta","touched","error","children","showError","className","styles","form_control","Textarea","props","input","RestProps","Input","module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","restProps","to","Message","dialog_message_item","message","DialogItem","path","key","dialogs_item","dialogs_item_active","onClick","e","preventDefault","name","maxLength100","AddMessageFormRedux","reduxForm","form","ref","useRef","onSubmit","handleSubmit","onKeyPress","current","click","dialogs_textarea","Field","validate","component","placeholder","Dialogs","messageArray","dialogsPageData","MessageData","map","elem","id","dialogsArray","DialogsData","dialogs_content","dialogs_items","dialog_messages","values","sendMessageActionCreator","newMessageBody","compose","DialogsPageData","actions"],"mappings":"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","file":"static/js/6.25473dee.chunk.js","sourcesContent":["export type FieldValidator = (value: string) => string | undefined;\r\n\r\nexport const requiredFiled: FieldValidator = (value) => {\r\n    if (value) {\r\n        return undefined;\r\n    }\r\n\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLength =\r\n    (maxLength: number): FieldValidator =>\r\n    (value) => {\r\n        if (value && value.length > maxLength) {\r\n            return `Max len is ${maxLength} symb`;\r\n        }\r\n        return undefined;\r\n    };\r\n","import styles from \"./FormsControl.module.css\";\r\nimport React from \"react\";\r\nimport { WrappedFieldMetaProps, WrappedFieldProps } from \"redux-form\";\r\n\r\ntype FormsControlsPropsType = {\r\n    meta: WrappedFieldMetaProps;\r\n};\r\nconst FormsControl: React.FC<FormsControlsPropsType> = ({\r\n    meta: { touched, error },\r\n    children,\r\n    ...props\r\n}) => {\r\n    const showError = touched && error;\r\n    return (\r\n        <div\r\n            className={styles.form_control + \" \" + (showError && styles.error)}\r\n        >\r\n            <div>{children}</div>\r\n            <div>{showError && <span>{error}</span>}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    const { input, meta, ...RestProps } = props;\r\n    return (\r\n        <FormsControl {...props}>\r\n            <textarea {...input} {...RestProps}></textarea>\r\n        </FormsControl>\r\n    );\r\n};\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const { input, meta, ...RestProps } = props;\r\n    return (\r\n        <FormsControl {...props}>\r\n            <input {...input} {...RestProps}></input>\r\n        </FormsControl>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_control\":\"FormsControl_form_control__36Uzx\",\"error\":\"FormsControl_error__3o0CI\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { AppStateType } from \"../redux/redux-store\";\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\ntype MapPropsType = {\r\n    isAuth: boolean;\r\n};\r\n\r\nexport function withAuthRedirect<WCP>(Component: React.ComponentType<WCP>) {\r\n    const RedirectComponent: React.FC<MapPropsType & {}> = (props) => {\r\n        let { isAuth, ...restProps } = props;\r\n        if (!isAuth) {\r\n            return <Redirect to=\"/login\" />;\r\n        } else {\r\n            // @ts-ignore\r\n            return <Component {...(restProps as WCP)} />;\r\n        }\r\n    };\r\n    let connectedRedirectComponent = connect<\r\n        MapPropsType,\r\n        {},\r\n        WCP,\r\n        AppStateType\r\n    >(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return connectedRedirectComponent;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_content\":\"Dialogs_dialogs_content__37NIn\",\"dialogs_items\":\"Dialogs_dialogs_items__32A41\",\"dialogs_item\":\"Dialogs_dialogs_item__1SC9h\",\"dialogs_item_active\":\"Dialogs_dialogs_item_active__1NTug\",\"dialog_messages\":\"Dialogs_dialog_messages__3NCR0\",\"dialog_message_item\":\"Dialogs_dialog_message_item__1kBHO\",\"dialogs_textarea\":\"Dialogs_dialogs_textarea__FVuFQ\"};","import React from \"react\";\r\nimport styles from \"./../Dialogs.module.css\";\r\n\r\ntype OwnPropsType = {\r\n    message: string;\r\n};\r\n\r\nconst Message: React.FC<OwnPropsType> = (props) => {\r\n    return <div className={styles.dialog_message_item}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import styles from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\ntype OwnPropsType = {\r\n    key: number;\r\n    name: string;\r\n};\r\n\r\nconst DialogItem: React.FC<OwnPropsType> = (props) => {\r\n    let path = \"/dialogs/\" + props.key;\r\n    return (\r\n        <div className={styles.dialogs_item + \" \" + styles.dialogs_item_active}>\r\n            <NavLink to={path} onClick={(e) => e.preventDefault()}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React, { useRef } from \"react\";\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { maxLength, requiredFiled } from \"../../utils/validators/validators\";\r\nimport { Textarea } from \"../common/FormsControls\";\r\nimport styles from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport { InitialStateType } from \"../../redux/dialogs-reducer\";\r\n\r\nlet maxLength100 = maxLength(100);\r\n\r\ntype OwnPropsType = {\r\n    dialogsPageData: InitialStateType;\r\n    sendMessageActionCreator: (messageText: string) => void;\r\n};\r\n\r\ntype NewMessageFormType = {\r\n    newMessageBody: string;\r\n};\r\n\r\nconst Dialogs: React.FC<OwnPropsType> = (props) => {\r\n    let messageArray = props.dialogsPageData.MessageData.map((elem) => (\r\n        <Message key={elem.id} message={elem.message} />\r\n    ));\r\n    let dialogsArray = props.dialogsPageData.DialogsData.map((elem) => (\r\n        <DialogItem key={elem.id} name={elem.name} />\r\n    ));\r\n    let addNewMessage = (values: NewMessageFormType) => {\r\n        props.sendMessageActionCreator(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.dialogs_content}>\r\n            <div className={styles.dialogs_items}>{dialogsArray}</div>\r\n            <div className={styles.dialog_messages}>\r\n                <div>{messageArray}</div>\r\n                <div className=\"new-messages-textarea\">\r\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AddMessageForm: React.FC<\r\n    InjectedFormProps<NewMessageFormType, {}> & {}\r\n> = (props) => {\r\n    let ref = useRef<HTMLButtonElement>(null)\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div onKeyPress={(e) => {\r\n                            if(e.key === \"Enter\") {\r\n                                ref.current?.click()\r\n                            }\r\n                        }} className={styles.dialogs_textarea}>\r\n                <Field\r\n                    validate={[requiredFiled, maxLength100]}\r\n                    component={Textarea}\r\n                    name=\"newMessageBody\"\r\n                    placeholder=\"Enter your message\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <button ref={ref}>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm<NewMessageFormType>({\r\n    form: \"dialogAddmessageForm\",\r\n})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import { actions } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    let dialogsPageData = state.DialogsPageData;\r\n    return {\r\n        dialogsPageData,\r\n    };\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, { ...actions }),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}