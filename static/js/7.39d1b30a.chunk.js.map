{"version":3,"sources":["hoc/withAuthRedirect.tsx","components/FindUsers/FindUsers.module.css","components/FindUsers/Users/User.module.css","components/FindUsers/UserSearchForm.module.css","components/FindUsers/Users/User.tsx","redux/selectors/users-selectors.ts","components/FindUsers/UsersSearchForm.tsx","components/FindUsers/FindUsers.tsx","components/FindUsers/FindUsersContainer.tsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","module","exports","User","userRef","createRef","useState","undefined","top","setTop","bottom","setBottom","isFirstRender","setIsFirstRender","useEffect","current","getBoundingClientRect","recalculatePosition","window","innerHeight","ref","className","styles","find_users_user","id","find_users_link_wrapper","find_users_user_image","src","UserImage","large","small","alt","find_users_user_info","UserDescription","find_users_user_buttons","followed","disabled","isFollowingInProgress","some","find_users_btn_add_remove","onClick","unfollow","follow","getIsFollowingInProgress","UserPageData","getUsersArraySuper","createSelector","UsersData","users","filter","u","getIsFetching","isFetching","selectFilter","UserSearchForm","React","memo","setFilter","useRef","isUsersFromFind","showFindUsers","useSelector","userSearchFormValidate","values","errors","search","friend","enableReinitialize","initialValues","term","validate","onSubmit","setSubmitting","isSubmitting","onKeyPress","e","key","click","user_search_form","type","name","as","value","htmlType","FindUsers","showMoreUsers","usersArray","countPages","countPageMayRecieved","setrecalculatePosition","onScroll","find_users_wrapper","find_users_items","find_users_item","map","photos","find_users_show_more","dispatch","useDispatch","history","useHistory","internalSetFilter","useCallback","actions","boolFriend","getUsersThunkCreator","urlParams","URLSearchParams","location","get","push","pathname","userId","getMoreUsers"],"mappings":"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","file":"static/js/7.39d1b30a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { AppStateType } from \"../redux/redux-store\";\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\ntype MapPropsType = {\r\n    isAuth: boolean;\r\n};\r\n\r\nexport function withAuthRedirect<WCP>(Component: React.ComponentType<WCP>) {\r\n    const RedirectComponent: React.FC<MapPropsType & {}> = (props) => {\r\n        let { isAuth, ...restProps } = props;\r\n        if (!isAuth) {\r\n            return <Redirect to=\"/login\" />;\r\n        } else {\r\n            // @ts-ignore\r\n            return <Component {...(restProps as WCP)} />;\r\n        }\r\n    };\r\n    let connectedRedirectComponent = connect<\r\n        MapPropsType,\r\n        {},\r\n        WCP,\r\n        AppStateType\r\n    >(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return connectedRedirectComponent;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"find_users_wrapper\":\"FindUsers_find_users_wrapper__Z15D9\",\"find_users_show_more\":\"FindUsers_find_users_show_more__2lUKW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"find_users_user\":\"User_find_users_user__vNYC2\",\"find_users_user_image\":\"User_find_users_user_image__3bIGa\",\"find_users_user_info\":\"User_find_users_user_info__1ieq2\",\"find_users_link_wrapper\":\"User_find_users_link_wrapper__1YHun\",\"find_users_user_buttons\":\"User_find_users_user_buttons__3YlAg\",\"find_users_btn_add_remove\":\"User_find_users_btn_add_remove__3cinY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_search_form\":\"UserSearchForm_user_search_form__tO-F3\"};","// @ts-nocheck\r\nimport React, { createRef, useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { PhotosType } from \"../../../types/types\";\r\nimport styles from \"./User.module.css\";\r\n\r\ntype OwnPropsType = {\r\n    id: number;\r\n    UserImage: PhotosType;\r\n    UserDescription: string;\r\n    followed: boolean;\r\n    recalculatePosition: boolean;\r\n    isFollowingInProgress: Array<number>;\r\n    follow: (id: number) => void;\r\n    unfollow: (id: number) => void;\r\n};\r\n\r\nconst User: React.FC<OwnPropsType> = (props) => {\r\n    const userRef = createRef<HTMLDivElement>();\r\n    let [top, setTop] = useState(undefined as number | undefined);\r\n    let [bottom, setBottom] = useState(undefined as number | undefined);\r\n    let [isFirstRender, setIsFirstRender] = useState(true);\r\n    useEffect(() => {\r\n        setIsFirstRender(false);\r\n    }, []);\r\n    useEffect(() => {\r\n        setTop(userRef.current?.getBoundingClientRect().top);\r\n        setBottom(userRef.current?.getBoundingClientRect().bottom);\r\n    }, [props.recalculatePosition, userRef, top, bottom]);\r\n    return (\r\n        <>\r\n            {isFirstRender ||\r\n            (top < window.innerHeight + 1000 && bottom > -1000) ? (\r\n                <div ref={userRef} className={styles.find_users_user}>\r\n                    <NavLink to={\"/profile/\" + props.id}>\r\n                        <div className={styles.find_users_link_wrapper}>\r\n                            <div className={styles.find_users_user_image}>\r\n                                <img\r\n                                    src={\r\n                                        props.UserImage.large ||\r\n                                        props.UserImage.small ||\r\n                                        \"http://assets.stickpng.com/thumbs/585e4beacb11b227491c3399.png\"\r\n                                    }\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className={styles.find_users_user_info}>\r\n                                {props.UserDescription}\r\n                            </div>\r\n                        </div>\r\n                    </NavLink>\r\n                    <div className={styles.find_users_user_buttons}>\r\n                        {props.followed ? (\r\n                            <button\r\n                                disabled={props.isFollowingInProgress.some(\r\n                                    (id) => id === props.id\r\n                                )}\r\n                                className={styles.find_users_btn_add_remove}\r\n                                onClick={() => {\r\n                                    props.unfollow(props.id);\r\n                                }}\r\n                            >\r\n                                Remove from list\r\n                            </button>\r\n                        ) : (\r\n                            <button\r\n                                disabled={props.isFollowingInProgress.some(\r\n                                    (id) => id === props.id\r\n                                )}\r\n                                className={styles.find_users_btn_add_remove}\r\n                                onClick={() => {\r\n                                    props.follow(props.id);\r\n                                }}\r\n                            >\r\n                                Add to list\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div ref={userRef}></div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default User;\r\n","import { UserType } from \"../../types/types\";\r\nimport { createSelector } from \"reselect\";\r\nimport { AppStateType } from \"../redux-store\";\r\n\r\nconst getIsFollowingInProgress = (state: AppStateType) =>\r\n    state.UserPageData.isFollowingInProgress;\r\nconst getUsers = (state: AppStateType) => state.UserPageData.UsersData;\r\nconst getUsersArraySuper = createSelector(\r\n    getUsers,\r\n    (users: Array<UserType>): Array<UserType> => {\r\n        return users.filter((u) => true);\r\n    }\r\n);\r\nconst getIsFetching = (state: AppStateType) => state.UserPageData.isFetching;\r\nconst getIsAuth = (state: AppStateType) => state.auth.isAuth;\r\nconst selectFilter = (state: AppStateType) => state.UserPageData.filter;\r\n\r\nexport {\r\n    getIsAuth,\r\n    getIsFetching,\r\n    getUsersArraySuper,\r\n    getIsFollowingInProgress,\r\n    selectFilter,\r\n};\r\n","import { Button } from \"antd\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styles from \"./UserSearchForm.module.css\";\r\nimport { selectFilter } from \"../../redux/selectors/users-selectors\";\r\n\r\nexport type FriendFormType = null | \"true\" | \"false\" | \"null\";\r\n\r\ntype UserSearchFormObjectType = {\r\n    search: string;\r\n    friend: FriendFormType;\r\n};\r\n\r\ntype UserSearchFormProps = {\r\n    setFilter: (term: string, friend: FriendFormType) => void;\r\n};\r\n\r\ntype SearchErrorsType = {\r\n    search: string | null;\r\n};\r\n\r\nexport const UserSearchForm: React.FC<UserSearchFormProps> = React.memo(\r\n    ({ setFilter }) => {\r\n        let ref = useRef<HTMLButtonElement>(null)\r\n        let [isUsersFromFind, showFindUsers] = useState(false);\r\n        const filter = useSelector(selectFilter);\r\n\r\n        const userSearchFormValidate = (values: UserSearchFormObjectType) => {\r\n            const errors: SearchErrorsType = {\r\n                search: null,\r\n            };\r\n            if (!values.search) {\r\n                if (isUsersFromFind) {\r\n                    showFindUsers(false);\r\n                    setFilter(\"\", null);\r\n                } else {\r\n                    if (!values.friend) {\r\n                        errors.search = \"Required\";\r\n                    }\r\n                }\r\n            }\r\n            return errors;\r\n        };\r\n\r\n        const submit = (\r\n            values: UserSearchFormObjectType,\r\n            {\r\n                setSubmitting,\r\n            }: { setSubmitting: (isSubmitting: boolean) => void }\r\n        ) => {\r\n            setFilter(values.search, values.friend);\r\n            setSubmitting(false);\r\n            showFindUsers(true);\r\n        };\r\n        return (\r\n            <div>\r\n                <Formik\r\n                    enableReinitialize\r\n                    initialValues={{\r\n                        search: filter.term as string,\r\n                        friend: filter.friend as FriendFormType,\r\n                    }}\r\n                    validate={() => userSearchFormValidate}\r\n                    onSubmit={submit}\r\n                >\r\n                    {({ isSubmitting }) => (\r\n                        <Form onKeyPress={(e) => {\r\n                            if(e.key === \"Enter\") {\r\n                                ref.current?.click()\r\n                            }\r\n                        }} className={styles.user_search_form}>\r\n                            <Field type=\"search\" name=\"search\" />\r\n                            <Field name=\"friend\" as=\"select\" value=\"undefined\">\r\n                                <option value=\"null\">All</option>\r\n                                <option value=\"true\">Only followed</option>\r\n                                <option value=\"false\">Only unfollowed</option>\r\n                            </Field>\r\n                            <ErrorMessage name=\"error\" />\r\n                            <Button ref={ref} htmlType=\"submit\" disabled={isSubmitting}>\r\n                                Find\r\n                            </Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        );\r\n    }\r\n);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./FindUsers.module.css\";\r\nimport User from \"./Users/User\";\r\nimport { FriendFormType, UserSearchForm } from \"./UsersSearchForm\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n    getIsFollowingInProgress,\r\n    getUsersArraySuper,\r\n} from \"../../redux/selectors/users-selectors\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\ntype MapDispatchPropsType = {\r\n    follow: (userId: number) => void;\r\n    unfollow: (userId: number) => void;\r\n    setFilter: (term: string, friend: FriendFormType) => void;\r\n    showMoreUsers: () => void;\r\n};\r\n\r\nlet FindUsers: React.FC<{} & MapDispatchPropsType> = ({\r\n    follow,\r\n    unfollow,\r\n    setFilter,\r\n    showMoreUsers,\r\n}) => {\r\n    const usersArray = useSelector(getUsersArraySuper);\r\n    const isFollowingInProgress = useSelector(getIsFollowingInProgress);\r\n    const countPages = useSelector(\r\n        (state: AppStateType) => state.UserPageData.countPageMayRecieved\r\n    );\r\n    const [recalculatePosition, setrecalculatePosition] = useState(false);\r\n    const scrollHandle = () => {\r\n        setrecalculatePosition(true);\r\n    };\r\n    useEffect(() => {\r\n        setrecalculatePosition(false);\r\n    }, [recalculatePosition]);\r\n    return (\r\n        <div onScroll={scrollHandle} className={styles.find_users_wrapper}>\r\n            <UserSearchForm setFilter={setFilter} />\r\n            <div className={styles.find_users_items}>\r\n                <div className={styles.find_users_item}>\r\n                    {usersArray.map((e) => {\r\n                        return (\r\n                            <User\r\n                                recalculatePosition={recalculatePosition}\r\n                                UserImage={e.photos}\r\n                                UserDescription={e.name}\r\n                                key={e.id}\r\n                                id={e.id}\r\n                                followed={e.followed}\r\n                                isFollowingInProgress={isFollowingInProgress}\r\n                                follow={follow}\r\n                                unfollow={unfollow}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n            {countPages !== 1 ? (\r\n                <div className={styles.find_users_show_more}>\r\n                    <button onClick={showMoreUsers}>Show more</button>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { FindUsers };\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    getUsersThunkCreator,\r\n    getMoreUsers,\r\n    follow,\r\n    unfollow,\r\n    actions,\r\n} from \"../../redux/users-reducer\";\r\nimport React, { useCallback, useEffect } from \"react\";\r\nimport { FindUsers } from \"./FindUsers\";\r\nimport { Preloader } from \"../common/preloader\";\r\nimport {\r\n    getIsFetching,\r\n    selectFilter,\r\n} from \"../../redux/selectors/users-selectors\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FriendFormType } from \"./UsersSearchForm\";\r\n\r\ntype OwnPropsType = {\r\n    PageTitle?: string;\r\n};\r\n\r\nconst FindUsersPage: React.FC<OwnPropsType> = (props) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const filter = useSelector(selectFilter);\r\n    let isFetching = useSelector(getIsFetching);\r\n\r\n    const internalSetFilter = useCallback(\r\n        (term: string | null, friend: FriendFormType = null) => {\r\n            dispatch(actions.setFilter(term, boolFriend(friend)));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const boolFriend = (friend: string | null) => {\r\n        if (friend !== null) {\r\n            if (friend === \"null\") {\r\n                return null;\r\n            } else return friend === \"true\";\r\n        }\r\n        if (friend === null || friend === undefined) return null;\r\n    };\r\n\r\n    const internalFollow = (userId: number) => {\r\n        dispatch(follow(userId));\r\n    };\r\n    const internalUnfollow = (userId: number) => {\r\n        dispatch(unfollow(userId));\r\n    };\r\n    const internalShowMoreUsers = () => {\r\n        dispatch(getMoreUsers());\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsersThunkCreator());\r\n    }, [filter, dispatch]);\r\n\r\n    useEffect(() => {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        const term: string | null = urlParams.get(\"term\");\r\n        let friend = urlParams.get(\"friend\");\r\n        if (term !== null || friend !== null) {\r\n            // @ts-ignore\r\n            internalSetFilter(term, friend);\r\n        }\r\n    }, [internalSetFilter]);\r\n\r\n    useEffect(() => {\r\n        if (filter.term !== \"\") {\r\n            if (filter.friend === null) {\r\n                history.push({\r\n                    pathname: \"/findUsers\",\r\n                    search: `term=${filter.term}`,\r\n                });\r\n            } else {\r\n                history.push({\r\n                    pathname: \"/findUsers\",\r\n                    search: `term=${filter.term}&friend=${filter.friend}`,\r\n                });\r\n            }\r\n        } else {\r\n            history.push({\r\n                pathname: \"/findUsers\",\r\n                search: \"\",\r\n            });\r\n        }\r\n    }, [filter, history]);\r\n\r\n    return (\r\n        <div>\r\n            {isFetching ? <Preloader /> : null}\r\n            <FindUsers\r\n                follow={internalFollow}\r\n                unfollow={internalUnfollow}\r\n                setFilter={internalSetFilter}\r\n                showMoreUsers={internalShowMoreUsers}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withAuthRedirect(FindUsersPage);\r\n"],"sourceRoot":""}